version: '3.8'

services:
  # ===== ZOOKEEPER =====
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: box-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - box-network

  # ===== KAFKA =====
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: box-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - box-network

  # ===== API FLASK =====
  box-api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: box-api
    depends_on:
      - kafka
    ports:
      - "5000:5000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - FLASK_ENV=production
    networks:
      - box-network
    restart: unless-stopped

  # ===== CONSUMER KAFKA =====
  box-consumer:
    build:
      context: .
      dockerfile: docker/consumer/Dockerfile
    container_name: box-consumer
    depends_on:
      - kafka
      - box-api
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - box-network
    restart: unless-stopped

# ===== RÃ‰SEAU =====
networks:
  box-network:
    driver: bridge